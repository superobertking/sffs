syntax = "proto3";

// distributed file system
service SFFS {
    // getdir
    rpc getdir(Void) returns (String);
    // cd directory_name
    rpc changedir(String) returns (Boolean);
    // filecount
    rpc filecount(ListOption) returns (Int64);

    // ls [-l] [directory_name]
    rpc openlist(ListRequest) returns (Boolean);
    rpc nextlist(Void) returns (DirEntry);
    rpc closelist(Void) returns (Boolean);

    // put localfile [remotefile]
    // get remotefile [localfile]
    // randomread remotefile firstbyte numbytes
    rpc openfiletoread(String) returns (Boolean);
    rpc openfiletowrite(String) returns (Boolean);

    rpc nextread(Void) returns (Block);
    rpc nextwrite(Block) returns (Boolean);
    rpc randomread(Range) returns (Block);

    // close should allow r/w
    rpc closefile(Void) returns (Boolean);
}

message Void {}

message Boolean {
    bool value = 1;
}

message Int64 {
    int64 value = 1;
}

message String {
    string value = 1;
}

message ListOption {
    string option = 1;
}

message ListRequest {
    string dir = 1;
    ListOption option = 2;
}

message DirEntry {
    string name = 1;
    bool isdir = 2;
    int64 size = 3;
    int64 modifytime = 4;
}

message Block {
    bytes data = 1;
    // length should be at most 512B
}

message Range {
    int64 start = 1;
    int64 count = 2;
}
